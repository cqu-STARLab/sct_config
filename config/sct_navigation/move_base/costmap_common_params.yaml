#机器人几何参，如果机器人是圆形，设置 robot_radius,如果是其他形状设置 footprint
#robot_radius: 0.32 #圆形
footprint: [ [ -0.32, -0.32 ], [ -0.32, 0.32 ], [ 0.32, 0.32 ], [ 0.32, -0.32 ] ] #其他形状

obstacle_range: 2.5 # 用于障碍物探测，比如: 值为 3.0，意味着检测到距离小于 3 米的障碍物时，就会引入代价地图
raytrace_range: 4.0 # 用于清除障碍物，比如：值为 3.5，意味着清除代价地图中 3.5 米以外的障碍物

#膨胀半径，扩展在碰撞区域以外的代价区域，使得机器人规划路径避开障碍物
inflation_radius: 0.5

##导航包所需要的传感器
#observation_sources: pointcloud2
##对传感器的坐标系和数据进行配置。这个也会用于代价地图添加和清除障碍物
#pointcloud2:
#  #    sensor_frame: velodyne
#  data_type: PointCloud2
#  topic: velodyne_points
#  marking: true
#  clearing: true

